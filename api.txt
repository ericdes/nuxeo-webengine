
Script Context:
"context"  -> context  // The WebContext - is the main entry point to webengine API. See bellow.
"this"     -> contex.getCurrentObject()       // "this" keyword is not supported by all scripts
"super"    -> contex.getParentObject()       // "super" is not supported by all scripts
"root"     -> contex.getRoot()                
"session"  -> contex.getSession()
"engine"   -> contex.getEngine()
"doc"      -> context.getCurrentDocument()
"request"  -> context.getRequest()
"response" -> context.getResponse()


---------------
The WebContext interface 

WebContext -> "context"

  context.getRequest()           // HTTP Request
  context.getResponse()          // HTTP Response

  context.getCurrentObject()     // the last traversed object that is bound to a nuxeo document ~ getLastResolvedObject()
  context.getCurrentDocument()   // the nuxeo doc bound to the current object ~ same as getCurrentObject().getDocument()
  context.getRootObject()        // the first web object that is bound to a nuxeo document
  context.getParentObject()      // the parent of the last traversed object ~ getCurrentObject().prev()
  context.getSession()           // the core session
  context.getEngine()            // the web engine instance
  context.getForm()              // the request form data (to access to request params)
  context.getPathInfo()          // the path info 
  context.getURL()               // the URL invoked by the client
  context.getURLPath()           // the path portion of the URL
  context.getScriptPath()        // the absolute script path if any (relative to web directory)
  context.getObjectPath()        // the absolute path of the last traversed object ~ same as getCurrentObject().getPath()
  context.getObjectPath(document) // try to resolve a nuxeo doc to a web object path  
context.makeAbsolutePath(relPath)      // can be called from scripts to create absolute paths rel to web dir from a relative path to
 the current script. If called from java the base path is assumed to directly in web dir: web/XXX
  context.getActions()           // the actions available on the current object ~ same as getCurrentObject().getActions()
  context.getActions(category)   // the actions available on the current object ~ same as getCurrentObject().getActions()
  context.getActionsByCategory() // the available actions grouped by categories ~ same as getCurrentObject().getActionsByCategory()
    
  context.setActionName(name)    // set (or change) the action name
  context.getActionName()        // get the action name if any (@@xxx segment)
  context.getSiteRoot()          // get the site root
  context.setSiteRoot(path)      // set the site root to the specified dir. (abs path from web dir) This will change futher script and relative path resolving 
  context.getForm()              // get the form data submited by the user. This includes any request parameters.
  context.getMapping()           // get the mapping information if any URL mapping rule was matched.
  context.getVar(name)           // get a contex variable
  context.setVar(name,value)     // set a context variable (can be shared between scripts)
  context.getEnv()               // get the environment vars (shared at engine level) ~ same as getEngine().getEnv()
  context.getEngine()            // get the web engine instance
  context.cancel()               // stop request processing and return to client with 200
  context.cancel(error_code)     // stop request processing and return to client with error_code 
  context.redirect(url)          // redirect the client to the given URL 
  context.render(template)       // render the given template in the current context (path is either rel. to current script either abs to web dir)
  context.runScript(script)      // run the given script in the current context (path should be either relative to the current script, either abs to web dir)
  context.write(text);           // write something to the output stream 
  context.getWriter();           // shortcut to servlet output stream
  context.getOutputStream()      // shortcut to servlet output stream
  
    
    